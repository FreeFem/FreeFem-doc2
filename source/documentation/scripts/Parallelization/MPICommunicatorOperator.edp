int status; //to get the MPI status of send / recv
real a, b;

mpiComm comm(mpiCommWorld, 0, 0);
mpiRequest req;

//send a,b asynchronously to the process 1
processor(1) << a << b;
//receive a,b synchronously from the process 10
processor(10) >> a >> b;

//broadcast from processor of comm to other comm processor
// broadcast(processor(10, comm), a);
//send synchronously to the process 10 the data a
status = Send(processor(10, comm), a);
//receive synchronously from the process 10 the data a
status = Recv(processor(10, comm), a);

//send asynchronously to the process 10 the data a without request
status = Isend(processor(10, comm), a);
//send asynchronously to the process 10 the data a with request
status = Isend(processor(10, comm, req), a);
//receive asynchronously from the process 10 the data a
status = Irecv(processor(10, req), a);
//Error asynchronously without request.
// status = Irecv(processor(10), a);

//send asynchronously to the process 10 the data a with request
processor(10, req) << a ;
//receive asynchronously from the process 10 the data a with request
processor(10, req) >> a ;

// mpiAlltoall(a, b, [comm]);
// mpiAllgather(a, b, [comm]);
// mpiGather(a, b, processor(..) );
// mpiScatter(a, b, processor(..));
// mpiReduce(a, b, processor(..), mpiMAX);
// mpiAllReduce(a, b, comm, mpiMAX);
