load "qf11to25"

// Quadrature on segment
real[int, int] qq1 = [
	[0.5, 0],
	[0.5, 1]
];

QF1 qf1(1, qq1); //def of quadrature formulae qf1 on segment
//remark:
//1 is the order of the quadrature exact for polynome of degree < 1

//Quadrature on triangle
real[int, int] qq2 = [
	[1./3., 0, 0],
	[1./3., 1, 0],
	[1./3., 0, 1]
];

QF2 qf2(1, qq2); //def of quadrature formulae qf2 on triangle
//remark:
//1 is the order of the quadrature exact for polynome of degree < 1
//so must have sum w^i = 1

// Quadrature on tetrahedron
real[int, int] qq3 = [
	[1./4., 0, 0, 0],
	[1./4., 1, 0, 0],
	[1./4., 0, 1, 0],
	[1./4., 0, 0, 1]
];

QF3 qf3(1, qq3); //def of quadrature formulae qf3 on get
//remark:
//1 is the order of the quadrature exact for polynome of degree < 1)

// Verification in 1d and 2d
mesh Th = square(10, 10);

real I1 = int1d(Th, qfe=qf1)(x^2);
real I1l = int1d(Th, qfe=qf1pElump)(x^2);

real I2 = int2d(Th, qft=qf2)(x^2);
real I2l = int2d(Th, qft=qf1pTlump)(x^2);

cout << I1 << " == " << I1l << endl;
cout << I2 << " == " << I2l << endl;
assert( abs(I1-I1l) < 1e-10 );
assert( abs(I2-I2l) < 1e-10 );
