load "gsl"

// Parameters
int n = 10;
real[int, int] dspline(2,n+1); //data points to define the spline
for(int i = 0; i <= n; ++i){ //set data points
	real xx = square(real(i)/n);
	real yy = sin(xx*pi*2);
	dspline(0, i) = xx;
	dspline(1, i) = yy;
}

// GSL splines
gslspline spline1(gslinterpcspline, dspline); //define the spline1
gslspline spline11(dspline); //define the spline11
gslspline spline2(gslinterpsteffen, dspline); //define the spline2
gslspline spline3(gslinterpcspline, dspline(0, :), dspline(1, :));
gslspline spline33(dspline(0, :), dspline(1, :)); //define the spline3
spline1 = spline2; //copy spline2 in spline1

real t = 1.;
real s1 = spline1(t); //evaluate the function spline1 at t
cout << "spline1(t) = " << s1 << endl;
real ds1 = spline1.d(t); //evaluate the derivative of function spline1 at t
cout << "spline1.d(t) = " << ds1 << endl;
real dds1 = spline1.dd(t); //evaluate the second derivative of function spline1 at t
cout << "spline1.dd(t) = " << dds1 << endl;
