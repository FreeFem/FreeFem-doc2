// Parameters
real al=0.5;
real dt = 0.05;
// Mesh
border C(t=0., 2.*pi) {x=cos(t); y=sin(t);};
mesh Th = buildmesh(C(100));

// Fespace
fespace Vh(Th,P1dc);
Vh w, ccold, v1 = y, v2 = -x, cc = exp(-10*((x-0.3)^2 +(y-0.3)^2));
Vh rhs=0;

// Macro
macro n() (N.x*v1 + N.y*v2) // Macro without parameter

// Problem
real t = 0.;

varf vAdual (cc, w)
	= int2d(Th)(
		  (cc/dt+(v1*dx(cc)+v2*dy(cc)))*w
	)
	+ intalledges(Th)(
		  (1-nTonEdge)*w*(al*abs(n)-n/2)*jump(cc)
	)
	;

varf vBdual (cc, w)
	= - int2d(Th)(
		  ccold*w/dt
	)
	;

matrix AA = vAdual(Vh, Vh);
matrix BB = vBdual(Vh, Vh);
set (AA, init=t, solver=sparsesolver);

// Time iterations
for (t = 0.; t < 2.*pi; t += dt){
	ccold = cc;
	rhs[] = BB * ccold[];
	cc[] = AA^-1 * rhs[];
	plot(cc, fill=1, cmm="t="+t+", min="+cc[].min+", max="+ cc[].max);
}


