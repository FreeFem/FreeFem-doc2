// Parameters
int m = 30;
int L = 80;
int LL = 80;
int j = 100;
real sigx = 0.3;
real sigy = 0.3;
real rho = 0.3;
real r = 0.05;
real K = 40;
real dt = 0.01;

// Mesh
mesh th = square(m, m, [L*x, LL*y]);

// Fespace
fespace Vh(th, P1);
Vh u = max(K-max(x,y),0.);
Vh xveloc, yveloc, v, uold;

// Time loop
for (int n = 0; n*dt <= 1.0; n++){
	// Mesh adaptation
	if (j > 20){
		th = adaptmesh(th, u, verbosity=1, abserror=1, nbjacoby=2,
			err=0.001, nbvx=5000, omega=1.8, ratio=1.8, nbsmooth=3,
			splitpbedge=1, maxsubdiv=5, rescaling=1);
		j = 0;
		xveloc = -x*r + x*sigx^2 + x*rho*sigx*sigy/2;
		yveloc = -y*r + y*sigy^2 + y*rho*sigx*sigy/2;
		u = u;
	}

	// Update
	uold = u;

	// Solve
	solve eq1(u, v, init=j, solver=LU)
		= int2d(th)(
			  u*v*(r+1/dt)
			+ dx(u)*dx(v)*(x*sigx)^2/2
			+ dy(u)*dy(v)*(y*sigy)^2/2
			+ (dy(u)*dx(v) + dx(u)*dy(v))*rho*sigx*sigy*x*y/2
		)
		- int2d(th)(
			  v*convect([xveloc, yveloc], dt, uold)/dt
		)
		+ on(2, 3, u=0)
		;

	// Update
	j = j+1;
};

// Plot
plot(u, wait=true, value=true);
