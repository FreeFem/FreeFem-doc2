// FOR BUILD IMG ONLY
load "iovtk"
// END

load "msh3"
load "medit" //dynamically loaded tools for 3D

// Parameters
int nn = 8;

// Mesh
mesh Th0 = square(nn, nn);
int[int] rup = [0, 2];
int[int] rdown = [0, 1];
int[int] rmid = [1, 1, 2, 1, 3, 1, 4, 1];
real zmin = 0, zmax = 1;
mesh3 Th = buildlayers(Th0, nn, zbound=[zmin, zmax],
	reffacemid=rmid, reffaceup=rup, reffacelow=rdown);

medit("c10x10x10",Th); //3d mesh visualization with medit

// Fespaces
fespace Vh2(Th0, P2);
Vh2 ux, uz, p2;

fespace VVh(Th, [P2, P2, P2, P1]);
VVh [u1, u2, u3, p];
VVh [v1, v2, v3, q];

// Macro
macro Grad(u) [dx(u), dy(u), dz(u)] //
macro div(u1,u2,u3) (dx(u1) + dy(u2) + dz(u3)) //

// Problem (directly solved)
solve vStokes ([u1, u2, u3, p], [v1, v2, v3, q])
	= int3d(Th, qforder=3)(
		  Grad(u1)' * Grad(v1)
		+ Grad(u2)' * Grad(v2)
		+ Grad(u3)' * Grad(v3)
		- div(u1, u2, u3) * q
		- div(v1, v2, v3) * p
		+ 1e-10 * q * p
	)
	+ on(2, u1=1., u2=0, u3=0)
	+ on(1, u1=0, u2=0, u3=0)
	;

// Plot
plot(p, wait=1, nbiso=5);  //3d visualization of pressure isolines

// FOR BUILD IMG ONLY
{
	fespace PV(Th, P1);
	PV uu1 = u1;
	PV uu2 = u2;
	PV uu3 = u3;
	PV pp = p;

	string DataName = "Velocity Pressure";
	int[int] Order = [1, 1];
	savevtk("Result_0.vtu", Th, [uu1, uu2, uu3], pp, dataname=DataName, order=Order);
}
//END

//See 10 plan of the velocity in 2D
for(int i = 1; i < 10; i++){
	// Cut plane
	real yy = i/10.;
	// 3D to 2D interpolation
	ux = u1(x,yy,y);
	uz = u3(x,yy,y);
	p2 = p(x,yy,y);
	// Plot
	plot([ux, uz], p2, cmm="cut y = "+yy, wait= 1);

	// FOR BUILD IMG ONLY
	{
		fespace PV(Th, P1);
		PV uux = ux;
		PV uuz = uz;
		PV pp2 = p2;

		string DataName = "Velocity Pressure";
		int[int] Order = [1, 1];
		savevtk("Result_"+i+".vtu", Th0, [uux, uuz, 0], pp2, dataname=DataName, order=Order);
	}
	//END
}
